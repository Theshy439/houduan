package com.qsoa.admin.servier.impl;

import javax.management.RuntimeErrorException;

import org.hibernate.validator.constraints.SafeHtml;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.qsoa.admin.mapper.AdminInfoMapper;
import com.qsoa.admin.pojo.AdminInfo;
import com.qsoa.admin.servier.AdminService;
import com.qsoa.system.util.MD5Util;
import com.qsoa.system.util.RandomUtil;

@Service
public class AdminServiceImpl implements AdminService{
	
	@Autowired
	private AdminInfoMapper adminInfoMapper;
	private Logger logger = LoggerFactory.getLogger(AdminServiceImpl.class);
	
	@Transactional(rollbackFor = Exception.class)
	@Override
	public int insert(AdminInfo adminInfo) {
		return adminInfoMapper.insert(adminInfo);	
		//throw new RuntimeException("主动抛出个异常");
	}
	@Cacheable(value = "common")
	@Override
	public boolean checkInfo(String username, String password) {
		String salt = adminInfoMapper.getSalt(username);
		System.out.println(MD5Util.makePwd(password, salt));
		System.out.println(salt);
		if(adminInfoMapper.checkAdminInfo(username, MD5Util.makePwd(password, salt)) != 0) {
			return true;
		}
		return false;
	}
	@Transactional(rollbackFor = Exception.class)
	@Override
	public boolean setPassword(String password, Integer id) {
		String salt = RandomUtil.makeSalt();
		password = MD5Util.makePwd(password, salt);
		if(adminInfoMapper.setPassword(id, password,salt) == 1) {
			return true;
		}
		return false;
	}

}
